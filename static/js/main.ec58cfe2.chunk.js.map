{"version":3,"sources":["App.js","Keyboard.js","Notes.js","Display.js","serviceWorker.js","index.js"],"names":["App","useState","currentInput","setCurrentInput","elements","setElements","calculate","setCalculate","alertText","setAlertText","lastClick","setLastClick","calculations","setCalculations","operands","isOperand","o","includes","isNumber","n","isNaN","checkState","console","log","length","resetValues","val","count","str","forEach","element","score","eval","toFixed","toString","isSumTouCount","prevState","handleClick","cI","newI","setTimeout","className","fluid","xs","sm","md","xl","lg","sticky","Keyboard","keyboard","prev","curr","setPrev","setCurr","id","look","size","st","map","key","index","onClick","Notes","document","querySelector","scrollTop","scrollHeight","scrollToView","variant","calculation","join","Display","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ec58cfe2.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Keyboard from './Keyboard'\nimport Notes from './Notes'\nimport { Row, Col, Container } from 'react-bootstrap';\nimport Display from './Display';\n\n\nfunction App() {\n  //------------------state------------------\n  const [currentInput, setCurrentInput] = useState('0')\n  const [elements, setElements] = useState([])\n  const [calculate, setCalculate] = useState(false)\n  const [alertText, setAlertText] = useState('')\n  const [lastClick, setLastClick] = useState('')\n  const [calculations, setCalculations] = useState([])\n  const operands = '*+/-'\n  const isOperand = o => { return operands.includes(o) }\n  const isNumber = n => { return isNaN(n) ? false : true }\n  const checkState = () => {\n    console.log('-------------check state-------------------------------')\n    console.log('elements', elements, elements.length)\n    console.log('currentInput', currentInput);\n    console.log('lastclick = ', lastClick)\n    console.log('calculate:', calculate)\n    console.log('calculations: ', calculations)\n  }\n\n  checkState()\n\n  //------------------------------------RESET STATE-------------------------------------\n  const resetValues = (val) => {\n    console.log('values reset')\n    setCurrentInput(val)\n    setElements([])\n  }\n  //-----------------------effect--------------------------------\n  // useEffect(() => {\n  //   if (calculate) {\n  //     console.log('counting')\n  //     let score = count(elements)\n  //     setCurrentInput(score)\n  //     setElements([score])\n  //     setCalculate(false)\n  //   }\n  // }, [calculate, elements])\n  //---------------------------calculate helper-------------------------------------\n  // const firstIndex = (arr, op1, op2) => {\n  //   let op1index = arr.indexOf(op1)\n  //   let op2index = arr.indexOf(op2)\n  //   if (op1index === -1 && op2index === -1) {\n  //     return -1\n  //   } else if (op2index === -1) {\n  //     return op1index\n  //   } else if (op1index === -1) {\n  //     return op2index\n  //   }\n  //   else {\n  //     return op1index < op2index ? op1index : op2index\n  //   }\n  // }\n  //--------------------------------end of calculate helper-------------------------------\n  // const countPREV = (elements) => {\n  //   let arr1 = [...elements]\n  //   let arr2 = []\n  //   let score = 0\n  //   let index = 0\n  //   while (firstIndex(arr1, '/', '*') !== -1) {\n  //     index = firstIndex(arr1, '/', '*')\n  //     // eslint-disable-next-line\n  //     score = eval(arr1[index - 1] + arr1[index] + arr1[index + 1])\n  //     arr2 = [...arr1.slice(0, index - 1), score.toString(), ...arr1.slice(index + 2, arr1.length)]\n  //     arr1 = [...arr2]\n  //   }\n  //   while (firstIndex(arr1, '+', '-') !== -1) {\n  //     let index = firstIndex(arr1, '+', '-')\n  //     // eslint-disable-next-line\n  //     score = eval(arr1[index - 1] + arr1[index] + arr1[index + 1])\n  //     arr2 = [...arr1.slice(0, index - 1), score.toString(), ...arr1.slice(index + 2, arr1.length)]\n  //     arr1 = [...arr2]\n  //   }\n  //   return arr1[0]\n  // }\n  //--------------------------------------end of calculate--------------------------------\n\n  //-------------------------------calculate  -----------------------------\n  const count = (elements) => {\n    let str = '';\n    elements.forEach(element => {\n      if (element < 0) {\n        str = str + `(${element})`\n      } else {\n        str = str + element\n      }\n    });\n    console.log(str)\n    // eslint-disable-next-line\n    let score = eval(str)//.toString()\n\n    score = score.toFixed(8) * 100 / 100\n\n    return score.toString()// < 0 ? score.toFixed(10) : score.toString()\n\n  }\n  //------------------------------------------------------------------------------\n  const isSumTouCount = () => {\n    if (calculate) {\n      console.log('counting')\n      let score = count(elements)\n      setCalculations(prevState => [...prevState, [...elements, '=', score]])\n      setCurrentInput(score)\n      setElements([score])\n      setCalculate(false)\n    }\n  }\n\n  //==================================click handler====================================================================\n  const handleClick = val => {\n    setLastClick(val)\n    console.log('handleclick clicked: ', val, \"currInput:\", currentInput)//message to console what key clicked\n    let cI = currentInput\n    let newI = ''\n    switch (val) {\n      //-------------------------------------case AC--------------------------------------------------\n      case 'AC':\n        resetValues('0')\n        break;\n\n      //-------------------------------------case C--------------------------------------------------\n      case 'C':\n        if (lastClick === 'C') {\n          break\n        }\n        if (!isOperand(lastClick)) {\n          setCurrentInput('0')\n        }\n        if (lastClick === '=') {\n          setCurrentInput('0')\n          setElements([])\n        }\n        break\n\n      //-------------------------------------------case dot--------------------------------------------\n      case '.':\n        //-------after equals----------\n        if (lastClick === '=') {\n          resetValues(val)\n          setCurrentInput('0' + val)\n          break\n        }\n        //----------another dot----------\n        if (cI.includes('.')) {\n          setAlertText('ANOTHER DOT ? REALLY?')\n          setTimeout(() => {\n            setAlertText('')\n          }, 600)\n          break\n        }\n        //------------------------------\n        if (isNumber(cI)) {\n          setCurrentInput(prevState => prevState + val)\n        } else {\n          if (cI.length === 2) {\n            setElements(prevState => [...prevState, cI[0]])\n            setCurrentInput(cI[1] + '0' + val)\n          } else {\n            setElements(prevState => [...prevState, cI])\n            setCurrentInput('0' + val)\n          }\n        }\n        break;\n\n      //-------------------------------case zero-------------------------------------------------------\n      case '0':\n        //----------------------divide by zero error----------\n        if (cI.includes('/')) {\n          setCurrentInput('ERROR')\n          setAlertText('dividing by zero')\n          setTimeout(() => {\n            setAlertText('')\n            resetValues('0')\n          }, 2000)\n          break\n        }\n        //----------------------------------------------------\n        if (isOperand(lastClick)) {\n          setElements(prevState => [...prevState, cI])\n          setCurrentInput(val)\n        }\n        if (isNumber(cI) && cI !== '0') {\n          setCurrentInput(prevState => prevState + val)\n        }\n        break;\n\n      //-----------------------------case number------------------------------------------------------\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n\n        //-------after equals----------\n        if (lastClick === '=') {\n          resetValues(val)\n          break\n        }\n        //---------------number too long------------\n        if (currentInput.length > 16) {\n          setAlertText('number too long')\n          setTimeout(() => { setAlertText('') }, 1000)\n          break;\n        }\n        //--------------display shows 0 only----\n        if (cI === '0') {\n          setCurrentInput(val)\n          break\n        }\n        //-----number on display--------\n        if (isNumber(cI)) {\n          setCurrentInput(prevState => prevState + val)\n          break\n        }\n        //---if number pressed after operand ---\n        if (!isNumber(cI)) {\n          if (cI.length === 2) {\n            setElements(prevState => [...prevState, cI[0]])\n            setCurrentInput(prevState => prevState[1] + val)\n          } else {\n            setElements(prevState => [...prevState, cI])\n            setCurrentInput(val)\n          }\n        }\n        break;\n\n      //------------------------------case + / * - -------------------------------------------------------\n      case '+':\n      case '/':\n      case '*':\n      case '-':\n        newI = val\n        // cI = (cI * 100 / 100).toString()\n        if (isNumber(cI) && lastClick !== '=') {\n          setElements(prevState => [...prevState, cI])\n        } else if (val === '-' && cI.length === 1 && lastClick !== '=' && lastClick !== 'C') {\n          newI = cI + val\n        }\n        setCurrentInput(newI)\n        break;\n\n      //---------------------------case =-------------------------------------------------------------\n      case '=':\n        if (lastClick !== '=' && elements.length > 0) {\n          setCalculate(true)\n          if (isNumber(cI)) {\n            setElements(prevState => [...prevState, cI])\n          }\n        }\n        break;\n\n      //---------------------------------------------------default-----------------------------------\n      default:\n        console.log('default case')\n    }\n  }\n  //=========================================click handler end=========================================================== \n\n\n\n  isSumTouCount()\n\n  return (\n    <div className=\"App\">\n      <Container className=\"text-center text-warning mt-4 py-2 d-flex justify-content-center\">\n        <h1 className=\"\">&lt;_Lou/&gt; React calculator</h1>\n      </Container>\n      <Container fluid className=\"pt-5 p-3 mt-5 rounded mx-auto\"  >\n        <Row className=\"pt-5 d-flex justify-content-center align-items-center\">\n          <Col xs={10} sm={8} md={6} xl={4} lg={5} className=\"bg-dark rounded p-3 m-2 shadow\">\n            <Display\n              currentInput={currentInput}\n              alertText={alertText} />\n            <Keyboard\n              handleClick={handleClick}\n              currentInput={currentInput}\n              alertText={alertText}\n            />\n          </Col>\n          <Col xs={10} sm={8} md={6} xl={4} lg={5} className=\"border border-dark rounded p-3 m-2 bg-dark shadow\">\n            <Notes\n              calculations={calculations}\n              setCalculations={setCalculations}\n              elements={elements}\n            />\n          </Col>\n        </Row>\n      </Container>\n      <footer className=\"pt-5 text-warning text-monospace text-center\" sticky=\"bottom\"> &lt;_Lou/&gt; 2020</footer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport { Container, Col, Row } from 'react-bootstrap';\nimport './App.css';\n\nfunction Keyboard({ handleClick, currentInput, alertText, prev, curr, setPrev, setCurr }) {\n    const keyboard = [\n        { id: 'clear', val: 'AC', look: 0, size: 6 },\n        { id: 'clrlast', val: 'C', look: 0, size: 3 },\n        { id: 'divide', val: '/', look: 1, size: 3 },\n        { id: 'seven', val: '7', look: 0, size: 3 },\n        { id: 'eight', val: '8', look: 0, size: 3 },\n        { id: 'nine', val: '9', look: 0, size: 3 },\n        { id: 'multiply', val: \"*\", look: 1, size: 3 },\n        { id: 'four', val: '4', look: 0, size: 3 },\n        { id: 'five', val: '5', look: 0, size: 3 },\n        { id: 'six', val: '6', look: 0, size: 3 },\n        { id: 'subtract', val: '-', look: 1, size: 3 },\n        { id: 'one', val: '1', look: 0, size: 3 },\n        { id: 'two', val: '2', look: 0, size: 3 },\n        { id: 'three', val: '3', look: 0, size: 3 },\n        { id: 'add', val: '+', look: 1, size: 3 },\n        { id: 'zero', val: '0', look: 0, size: 6 },\n        { id: 'decimal', val: '.', look: 0, size: 3 },\n        { id: 'equals', val: '=', look: 1, size: 3 },\n    ]\n\n    //----------------button styles--------------------------------\n    const st = ['border border-dark rounded bg-secondary text-center text-light p-0 keyboard',\n        'border border-dark rounded bg-warning text-center text-light p-0 keyboard']\n\n    return (\n        <>\n            <Container className=\"\">\n                <Row id=\"keyboardstyle\">\n                    {keyboard.map((key, index) => (\n                        <Col xs={key.size}\n                            id={key.id}\n                            className={st[key.look]}\n                            key={index}\n                            onClick={() => {\n                                handleClick(keyboard[index].val)\n                            }} >\n                            {key.val}\n                        </Col>\n                    ))}\n                </Row>\n            </Container>\n\n        </>\n    )\n}\nexport default Keyboard","import React from 'react'\nimport './App.css';\nimport { Container, Col, Row, Button } from 'react-bootstrap';\n\nexport default function Notes({ calculations, setCalculations, elements }) {\n    const scrollToView = () => {\n        console.log('scrolltoview called')\n        if (document.querySelector(\"#currentOp\")) {\n            let element = document.querySelector(\"#calculations\")\n            element.scrollTop = element.scrollHeight\n        }\n\n    }\n    scrollToView()\n    return (\n        <div>\n            <Container className=\"\">\n                <Row >\n                    <Col className=\"d-flex justify-content-around align-items-center border-bottom p-1 mb-1\">\n                        <div className=\"text-light\">Notes</div>\n                        <Button\n                            onClick={() => {\n                                setCalculations([])\n                            }}\n                            variant=\"danger\"\n                            size=\"sm\"\n                            className=\"badge-pill\">\n                            Clear\n                        </Button>\n                    </Col>\n                </Row>\n            </Container>\n            <Container id=\"calculations\" className=\"\">\n                {calculations.map((calculation, index) => (\n                    <Row key={index} className=\"border-bottom p-2\">\n                        <span className=\"text-monospace font-italic text-primary\">\n                            {calculation.join(\" \")}\n                        </span>\n                    </Row>\n                ))}\n                <Row id=\"currentOp\">\n                    <span className=\"text-light p-2\">{elements.join(\" \")} </span>\n                </Row>\n            </Container>\n\n        </div>\n    )\n}\n","import React from 'react'\nimport './App.css';\nimport { Row, Col, Container } from 'react-bootstrap';\n\nexport default function Display({ currentInput, alertText }) {\n    return (\n        <>\n            <Container className=\"bg-light rounded\">\n                <Row>\n                    <h5 className=\"text-center text-uppercase\">{alertText}</h5>\n                </Row>\n                <Row>\n                    <Col className=\"bg-light text-right overflow-auto m-2\">\n                        <h4 id=\"display\">{currentInput}</h4>\n                    </Col>\n                </Row>\n            </Container>\n        </>\n    )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}